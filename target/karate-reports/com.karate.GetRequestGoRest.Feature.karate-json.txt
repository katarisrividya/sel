{"failedCount":0,"prefixedPath":"classpath:com\/karate\/GetRequestGoRest.Feature","packageQualifiedName":"com.karate.GetRequestGoRest.Feature","loopIndex":-1,"relativePath":"com\/karate\/GetRequestGoRest.Feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":2050400,"millis":2.0504,"status":"passed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"def config = read('Token.json')"}},{"result":{"nanos":1022100,"millis":1.0221,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"header Authorization = 'Bearer ' + config.tokenID"}},{"result":{"nanos":610600,"millis":0.6106,"status":"passed"},"step":{"line":9,"prefix":"Given","index":0,"text":"url 'https:\/\/gorest.co.in'"}},{"result":{"nanos":1368434800,"millis":1368.4348,"status":"passed"},"step":{"line":10,"prefix":"When","index":1,"text":"method GET"},"stepLog":"17:20:54.944 request:\n1 > GET https:\/\/gorest.co.in\n1 > Authorization: Bearer 985bda3013fd09fd86acd592c14e582dda086072f98eb3fddb1de50197d0f35c\n1 > Host: gorest.co.in\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/16.0.2)\n1 > Accept-Encoding: gzip,deflate\n\n\n17:20:56.308 response time in milliseconds: 1353\n1 < 200\n1 < Date: Fri, 05 Aug 2022 11:50:56 GMT\n1 < Content-Type: text\/html; charset=utf-8\n1 < Transfer-Encoding: chunked\n1 < Connection: keep-alive\n1 < Vary: Accept-Encoding\n1 < X-Frame-Options: SAMEORIGIN\n1 < X-XSS-Protection: 0\n1 < X-Content-Type-Options: nosniff\n1 < X-Download-Options: noopen\n1 < X-Permitted-Cross-Domain-Policies: none\n1 < Referrer-Policy: strict-origin-when-cross-origin\n1 < Link: <\/assets\/application-2715366c2372d5dfabfa9c9d05a0e84b9c0de17fe12c2d96e07d2db0e218fed2.css>; rel=preload; as=style; nopush\n1 < Cache-Control: max-age=0, private, must-revalidate\n1 < Feature-Policy: camera 'none'; gyroscope 'none'; microphone 'none'; usb 'none'; fullscreen 'self'\n1 < X-Request-Id: d4b2424a-81ab-4502-8b5c-028259595900\n1 < X-Runtime: 0.013191\n1 < Strict-Transport-Security: max-age=63072000; includeSubDomains\n1 < CF-Cache-Status: DYNAMIC\n1 < Expect-CT: max-age=604800, report-uri=\"https:\/\/report-uri.cloudflare.com\/cdn-cgi\/beacon\/expect-ct\"\n1 < Report-To: {\"endpoints\":[{\"url\":\"https:\\\/\\\/a.nel.cloudflare.com\\\/report\\\/v3?s=v9eCkxTnbA8FnQ1tx6iOBkrF8e7ofjJQYaQXRXBNEqQcLhBVReQ3Ospfh2dUOFGN3tlifoSvACcTuysHeXxnXj%2BIK%2FJt4JOeRugln09y7VBhrQcHngk4u1TTVenO9j0%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}\n1 < NEL: {\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}\n1 < Server: cloudflare\n1 < CF-RAY: 735f5167bb161ead-AMS\n1 < alt-svc: h3=\":443\"; ma=86400, h3-29=\":443\"; ma=86400\n1 < Set-Cookie: _gorest_session=cG9UPgTw%2FD8xCxego1eRagY4ePE9RxeWOcvuEqwVlYvxHZySXy%2F6tTN0lwvTL4A6O%2F48CZyuOVc%2BfhT7EJ4t7dwq6Hnz2S%2B5lXi4TH22er7VO35EqClOsnM5ipoOiw2UXMpU2HBvluRTH4W9Zp6OTR0qourdBZVhK6Odmyl9EIgDn5EydYN6stOPGYbON9r0hqFlWHexP0G7Hkv2jpt%2BY9HSdyQE5kbFKoSYC0bnP2fNEXsblbPQYxufEc2fscpPxWg6znwDpLU5KAegaImumYDZm0UcCyQ%3D--30z8i%2F8nT%2BfunbM2--6JDPkxcvGznzq%2BNnBPvirg%3D%3D; Domain=gorest.co.in; Secure\n<!DOCTYPE html><html><head><meta charset=\"utf-8\" \/><meta content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" name=\"viewport\" \/><link href=\"\/favicon.ico\" rel=\"icon\" type=\"image\/x-icon\" \/><title>GraphQL and REST API for Testing and Prototyping | GO REST<\/title>\n<meta name=\"description\" content=\"24\/7 online fake GraphQL and REST API service for quick testing and prototyping of web and android applications. Supports authentication, custom rate limiting, response format negotiation\">\n<meta name=\"keywords\" content=\"graphql, rest api, fake data, api testing, graphql testing, json response, xml response, oauth, rate limiting\"><meta name=\"csrf-param\" content=\"authenticity_token\" \/>\n<meta name=\"csrf-token\" content=\"qOhCUajMkzzyPNJfX10Yc8ttdGjzgGB4lfTBr-b0u8fffP6sLQKHvKW5BTpDJxr4nwk8Ng76kOIF0mxNEIIFaQ\" \/><link rel=\"stylesheet\" href=\"\/assets\/application-2715366c2372d5dfabfa9c9d05a0e84b9c0de17fe12c2d96e07d2db0e218fed2.css\" media=\"all\" data-turbolinks-track=\"reload\" \/><script src=\"\/packs\/js\/application-84cecc93f869802defaa.js\" data-turbolinks-track=\"reload\" defer=\"defer\"><\/script><script async=\"true\" crossorigin=\"anonymous\" src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js?client=ca-pub-4930099895671899\"><\/script><script async=\"true\" src=\"https:\/\/www.googletagmanager.com\/gtag\/js?id=G-7KR6VNWHWS\"><\/script><script>window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'G-7KR6VNWHWS');<\/script><\/head><body><nav class=\"navbar navbar-expand-lg navbar-dark bg-dark sticky-top\"><div class=\"container\"><a class=\"navbar-brand\" href=\"\/\"><i class=\"fas fa-exchange-alt\"><\/i> Go REST<\/a><button aria-controls=\"AppNavBar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" class=\"navbar-toggler\" data-bs-target=\"#AppNavBar\" data-bs-toggle=\"collapse\" type=\"button\"><span class=\"navbar-toggler-icon\"><\/span><\/button><div class=\"collapse navbar-collapse\" id=\"AppNavBar\"><ul class=\"navbar-nav ms-auto\"><li class=\"nav-item\"><a class=\"nav-link\" href=\"\/chandamama-stories\"><i class=\"fas fa-cloud-moon\"><\/i> Chandamama Stories<\/a><\/li><li class=\"nav-item\"><a class=\"nav-link\" href=\"\/qa\"><i class=\"fas fa-life-ring\"><\/i> Help<\/a><\/li><li class=\"nav-item\"><a class=\"nav-link\" href=\"\/rest-console\"><i class=\"fab fa-linux\"><\/i> Rest Console<\/a><\/li><li class=\"nav-item dropdown\"><a aria-expanded=\"false\" class=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" href=\"#\" id=\"ToolsDropDown\" role=\"button\"><i class=\"fas fa-tools\"><\/i> Tools<\/a><ul aria-labelledby=\"ToolsDropDown\" class=\"dropdown-menu\"><li class=\"\"><a class=\"dropdown-item\" href=\"\/tools\/base64-encode-decode\">Base64 Encode\/Decode<\/a><\/li><li class=\"\"><a class=\"dropdown-item\" href=\"\/tools\/url-encode-decode\">Url Encode\/Decode<\/a><\/li><li class=\"\"><a class=\"dropdown-item\" href=\"\/tools\/gcode-translator\">G-Code Translator<\/a><\/li><\/ul><\/li><li class=\"nav-item\"><a class=\"nav-link\" href=\"\/consumer\/login\">Login<\/a><\/li><\/ul><\/div><\/div><\/nav><div class=\"container pt-3\"><h1 class=\"text-center\">GraphQL and REST API for Testing and Prototyping<\/h1><h4 class=\"text-center text-muted\">fake data | real responses | 24\/7 online<\/h4><div class=\"row mt-5\"><div class=\"col-md-6\"><h3>Resources<\/h3><table class=\"table table-responsive-sm table-sm\"><tr><td><samp><a target=\"_blank\" class=\"text-white\" href=\"https:\/\/gorest.co.in\/public\/v2\/users\">https:\/\/gorest.co.in\/public\/v2\/users<\/a><\/samp><\/td><td class=\"text-end\">2666<\/td><\/tr><tr><td><samp><a target=\"_blank\" class=\"text-white\" href=\"https:\/\/gorest.co.in\/public\/v2\/posts\">https:\/\/gorest.co.in\/public\/v2\/posts<\/a><\/samp><\/td><td class=\"text-end\">1300<\/td><\/tr><tr><td><samp><a target=\"_blank\" class=\"text-white\" href=\"https:\/\/gorest.co.in\/public\/v2\/comments\">https:\/\/gorest.co.in\/public\/v2\/comments<\/a><\/samp><\/td><td class=\"text-end\">1315<\/td><\/tr><tr><td><samp><a target=\"_blank\" class=\"text-white\" href=\"https:\/\/gorest.co.in\/public\/v2\/todos\">https:\/\/gorest.co.in\/public\/v2\/todos<\/a><\/samp><\/td><td class=\"text-end\">1330<\/td><\/tr><\/table><\/div><div class=\"col-md-6\"><h3>Trying it Out<\/h3><table class=\"table table-responsive-sm table-sm\"><tr><td><samp>POST \/public\/v2\/users<\/samp><\/td><td class=\"text-end\">Create a new user<\/td><\/tr><tr><td><samp>GET \/public\/v2\/users\/50<\/samp><\/td><td class=\"text-end\">Get user details<\/td><\/tr><tr><td><samp>PUT|PATCH \/public\/v2\/users\/50<\/samp><\/td><td class=\"text-end\">Update user details<\/td><\/tr><tr><td><samp>DELETE \/public\/v2\/users\/50<\/samp><\/td><td class=\"text-end\">Delete user<\/td><\/tr><\/table><\/div><\/div><h3 class=\"mt-3\">Nested Resources<\/h3><div class=\"row\"><div class=\"col-md-6\"><table class=\"table table-responsive-sm table-sm\"><tr><td><samp>GET <a target=\"_blank\" class=\"text-white\" href=\"https:\/\/gorest.co.in\/public\/v2\/users\/50\/posts\">\/public\/v2\/users\/50\/posts<\/a><\/samp><\/td><td class=\"text-end\">Retrieves user posts<\/td><\/tr><tr><td><samp>GET <a target=\"_blank\" class=\"text-white\" href=\"https:\/\/gorest.co.in\/public\/v2\/posts\/50\/comments\">\/public\/v2\/posts\/50\/comments<\/a><\/samp><\/td><td class=\"text-end\">Retrieves post comments<\/td><\/tr><tr><td><samp>GET <a target=\"_blank\" class=\"text-white\" href=\"https:\/\/gorest.co.in\/public\/v2\/users\/50\/todos\">\/public\/v2\/users\/50\/todos<\/a><\/samp><\/td><td class=\"text-end\">Retrieves user todos<\/td><\/tr><\/table><\/div><div class=\"col-md-6\"><table class=\"table table-responsive-sm table-sm\"><tr><td><samp>POST \/public\/v2\/users\/50\/posts<\/samp><\/td><td class=\"text-end\">Creates a user post<\/td><\/tr><tr><td><samp>POST \/public\/v2\/posts\/50\/comments<\/samp><\/td><td class=\"text-end\">Creates a post comment<\/td><\/tr><tr><td><samp>POST \/public\/v2\/users\/50\/todos<\/samp><\/td><td class=\"text-end\">Creates a user todo<\/td><\/tr><\/table><\/div><\/div><ul><li class=\"text-warning\">Do not post your personal data like name, email, phone, photo etc...<\/li><li class=\"text-info\">For paged results parameter \"page\" should be passed in url ex: GET <code>\/public\/v2\/users?page=1<\/code><\/li><li class=\"text-info\">Request methods PUT, POST, PATCH, DELETE needs access token, which needs to be passed with &quot;Authorization&quot; header as Bearer token.<\/li><li class=\"text-info\">API Versions <code>\/public-api\/*<\/code>, <code>\/public\/v1\/*<\/code> and <code>\/public\/v2\/*<\/code><\/li><li><a href=\"\/consumer\/login\">Get your access token<\/a><\/li><\/ul><h3 class=\"mt-5\">GraphQL Endpoint<\/h3><ul><li>GraphQL API is available at <code>https:\/\/gorest.co.in\/public\/v2\/graphql<\/code><\/li><li><a target=\"_blank\" href=\"\/graphql\/schema.json\">View GraphQL json schema<\/a><\/li><li><a target=\"_blank\" href=\"graphql\/schema.graphql\">View GrapQL schema<\/a><\/li><\/ul><h3 class=\"mt-5\">Features<\/h3><ul><li>Fully secured quick prototyping.<\/li><li>Response format negotiation. (supporting JSON and XML add &quot;.json&quot; or &quot;.xml&quot; to api end point)<\/li><li>Support for the OPTIONS and HEAD verbs.<\/li><li>Full search support on all fields. Ex: https:\/\/gorest.co.in\/public\/v2\/users?name=kumar<\/li><li>Data created\/modified by a user is only visible to that perticular user, all data will be deleted and recreated on daily basis.<\/li><li><a href=\"\/my-account\/logs\">Request and response logging.<\/a><\/li><\/ul><div class=\"row\"><div class=\"col-md-6\"><h3 class=\"mt-3\">Rate Limiting Headers<\/h3><ul><li><a href=\"\/my-account\/access-tokens\">Customize the rate limit per access token.<\/a><\/li><li><code>X-RateLimit-Limit<\/code> number of allowed requests\/minute.<\/li><li><code>X-RateLimit-Remaining<\/code> remaining requests within the current period.<\/li><li><code>X-RateLimit-Reset<\/code> seconds to wait before having maximum number of allowed requests again.<\/li><\/ul><\/div><div class=\"col-md-6\"><h3 class=\"mt-3\">Pagination Headers<\/h3><ul><li><code>X-Pagination-Total<\/code> total number of results.<\/li><li><code>X-Pagination-Pages<\/code> total number of pages.<\/li><li><code>X-Pagination-Page<\/code> current page number.<\/li><li><code>X-Pagination-Limit<\/code> results per page.<\/li><\/ul><\/div><\/div><h3 class=\"mt-3\">API Version 2<\/h3><ul><li>Path: <code>\/public\/v2\/*<\/code><\/li><li>Response format Object or Array of Objects <code>{}<\/code> or <code>[{}]<\/code><\/li><li>HTTP Status code contains the actual response code, response headers contains the pagination information, response body contains the results.<\/li><\/ul><h3 class=\"mt-3\">API Version 1<\/h3><ul><li>Path: <code>\/public\/v1\/*<\/code><\/li><li>Response format <code>{ meta:, data: }<\/code><\/li><li>HTTP status code contains the actual response code, <code>meta<\/code> contains the pagination information and <code>data<\/code> contains the actual results<\/li><\/ul><h3 class=\"mt-3\">API Version 0<\/h3><ul><li>Path: <code>\/public-api\/*<\/code><\/li><li>Response format <code>{ code :, meta:, data: }<\/code><\/li><li>HTTP status code is always 200, <code>code<\/code> contains the actual response code, <code>meta<\/code> contains the pagination information, <code>data<\/code> contains the actual results<\/li><\/ul><h3 class=\"mt-5\">Authentication<\/h3><p>Unlike Web applications, RESTful APIs are usually stateless, which means sessions or cookies should not be used. Therefore, each request should come with some sort of authentication credentials. A common practice is to send a secret access token with each request to authenticate the user. Since an access token can be used to uniquely identify and authenticate a user, API requests should always be sent via HTTPS to prevent man-in-the-middle (MitM) attacks. <\/p><p>There are different ways to send an access token:<\/p><ul><li><a href=\"https:\/\/en.wikipedia.org\/wiki\/Basic_access_authentication\" rel=\"noreferrer\" target=\"_blank\">HTTP Basic Auth<\/a>: the access token is sent as the username.<\/li><li>Query parameter: the access token is sent as a query parameter in the API URL. <br \/>e.g. <samp>https:\/\/gorest.co.in\/public\/v2\/users?access-token=xxx<\/samp><\/li><li><a href=\"https:\/\/oauth.net\/2\/\" rel=\"noreferrer\" target=\"_blank\">OAuth 2<\/a>: the access token is obtained by the consumer from an authorization server and sent to the API server via <a href=\"https:\/\/tools.ietf.org\/html\/rfc6750\" rel=\"noreferrer\" target=\"_blank\">HTTP Bearer Tokens <\/a>, according to the OAuth2 protocol.<\/li><li class=\"text-info\">This API supports only &quot;HTTP Bearer Tokens&quot; and &quot;Query parameter Auth&quot;<\/li><\/ul><h3 class=\"mt-5 mb-3\">cUrl Examples for REST API<\/h3><div class=\"mb-3\"><h6 class=\"text-info\">List users<\/h6><samp class=\"user-select-all text-break\">curl -i -H \"Accept:application\/json\" -H \"Content-Type:application\/json\" -H \"Authorization: Bearer ACCESS-TOKEN\" -XGET \"https:\/\/gorest.co.in\/public\/v2\/users\"<\/samp><\/div><div class=\"mb-3\"><h6 class=\"text-info\">Create user<\/h6><samp class=\"user-select-all text-break\">curl -i -H \"Accept:application\/json\" -H \"Content-Type:application\/json\" -H \"Authorization: Bearer ACCESS-TOKEN\" -XPOST \"https:\/\/gorest.co.in\/public\/v2\/users\" -d '{\"name\":\"Tenali Ramakrishna\", \"gender\":\"male\", \"email\":\"<a href=\"\/cdn-cgi\/l\/email-protection\" class=\"__cf_email__\" data-cfemail=\"dfabbab1beb3b6f1adbeb2beb4adb6acb7b1be9feeeabcbaf1bcb0b2\">[email&#160;protected]<\/a>\", \"status\":\"active\"}' <\/samp><\/div><div class=\"mb-3\"><h6 class=\"text-info\">Update user<\/h6><samp class=\"user-select-all text-break\">curl -i -H \"Accept:application\/json\" -H \"Content-Type:application\/json\" -H \"Authorization: Bearer ACCESS-TOKEN\" -XPATCH \"https:\/\/gorest.co.in\/public\/v2\/users\/50\" -d '{\"name\":\"Allasani Peddana\", \"email\":\"<a href=\"\/cdn-cgi\/l\/email-protection\" class=\"__cf_email__\" data-cfemail=\"5c3d30303d2f3d3235722c3938383d323d1c6d693f39723f3331\">[email&#160;protected]<\/a>\", \"status\":\"active\"}' <\/samp><\/div><div class=\"mb-3\"><h6 class=\"text-info\">Delete user<\/h6><samp class=\"user-select-all text-break\">curl -i -H \"Accept:application\/json\" -H \"Content-Type:application\/json\" -H \"Authorization: Bearer ACCESS-TOKEN\" -XDELETE \"https:\/\/gorest.co.in\/public\/v2\/users\/50\"<\/samp><\/div><h3 class=\"mt-5 mb-3\">cUrl Examples for GraphQL<\/h3><div class=\"mb-3\"><h6 class=\"text-info\">List users<\/h6><samp class=\"user-select-all text-break\">curl -i -H \"Accept:application\/json\" -H \"Content-Type:application\/json\" -H \"Authorization: Bearer ACCESS-TOKEN\" -XPOST \"https:\/\/gorest.co.in\/public\/v2\/graphql\" -d '{\"query\":\"query{users {pageInfo {endCursor startCursor hasNextPage hasPreviousPage} totalCount nodes {id name email gender status}}}\"}'<\/samp><\/div><div class=\"mb-3\"><h6 class=\"text-info\">Get User<\/h6><samp class=\"user-select-all text-break\">curl -i -H \"Accept:application\/json\" -H \"Content-Type:application\/json\" -H \"Authorization: Bearer ACCESS-TOKEN\" -XPOST \"https:\/\/gorest.co.in\/public\/v2\/graphql\" -d '{\"query\":\"query{user(id: 50) { id name email gender status }}\"}'<\/samp><\/div><div class=\"mb-3\"><h6 class=\"text-info\">Create User<\/h6><samp class=\"user-select-all text-break\">curl -i -H \"Accept:application\/json\" -H \"Content-Type:application\/json\" -H \"Authorization: Bearer ACCESS-TOKEN\" -XPOST \"https:\/\/gorest.co.in\/public\/v2\/graphql\" -d '{\"query\":\"mutation{createUser(input: {name: \\\"Tenali Ramakrishna\\\" gender: \\\"male\\\" email: \\\"<a href=\"\/cdn-cgi\/l\/email-protection\" class=\"__cf_email__\" data-cfemail=\"2e5a4b404f4247005c4f434f455c475d46404f6e1f1b4d4b004d4143\">[email&#160;protected]<\/a>\\\" status: \\\"active\\\"}) {user{id name gender email status}}}\"}'<\/samp><\/div><div class=\"mb-3\"><h6 class=\"text-info\">Update User<\/h6><samp class=\"user-select-all text-break\">curl -i -H \"Accept:application\/json\" -H \"Content-Type:application\/json\" -H \"Authorization: Bearer ACCESS-TOKEN\" -XPOST \"https:\/\/gorest.co.in\/public\/v2\/graphql\" -d '{\"query\":\"mutation{updateUser(input: {id: 50 name: \\\"Allasani Peddana\\\" email: \\\"<a href=\"\/cdn-cgi\/l\/email-protection\" class=\"__cf_email__\" data-cfemail=\"03626f6f6270626d6a2d73666767626d6243323660662d606c6e\">[email&#160;protected]<\/a>\\\" status: \\\"active\\\"}) {user{id name gender email status}}}\"}'<\/samp><\/div><div class=\"mb-3\"><h6 class=\"text-info\">Delete User<\/h6><samp class=\"user-select-all text-break\">curl -i -H \"Accept:application\/json\" -H \"Content-Type:application\/json\" -H \"Authorization: Bearer ACCESS-TOKEN\" -XPOST \"https:\/\/gorest.co.in\/public\/v2\/graphql\" -d '{\"query\":\"mutation{deleteUser(input: {id: 50}){user {id name email gender status}}}\"}'<\/samp><\/div><h3 class=\"mt-5\">REST API Http Response Codes<\/h3><ul><li>200: OK. Everything worked as expected.<\/li><li>201: A resource was successfully created in response to a POST request. The Location header contains the URL pointing to the newly created resource.<\/li><li>204: The request was handled successfully and the response contains no body content (like a DELETE request).<\/li><li>304: The resource was not modified. You can use the cached version.<\/li><li>400: Bad request. This could be caused by various actions by the user, such as providing invalid JSON data in the request body etc.<\/li><li>401: Authentication failed.<\/li><li>403: The authenticated user is not allowed to access the specified API endpoint.<\/li><li>404: The requested resource does not exist.<\/li><li>405: Method not allowed. Please check the Allow header for the allowed HTTP methods.<\/li><li>415: Unsupported media type. The requested content type or version number is invalid.<\/li><li>422: Data validation failed (in response to a POST request, for example). Please check the response body for detailed error messages.<\/li><li>429: Too many requests. The request was rejected due to rate limiting.<\/li><li>500: Internal server error. This could be caused by internal program errors.<\/li><\/ul><\/div><hr class=\"mt-5\" \/><div class=\"container\"><div class=\"footer\"><ul class=\"list-inline\"><li class=\"list-inline-item\">&copy; Go Rest 2022<\/li><li class=\"list-inline-item float-lg-end\"><a href=\"\/privacy-policy\">Privacy Policy<\/a><\/li><li class=\"list-inline-item float-lg-end me-3\"><a href=\"\/contact-us\">Contact Us<\/a><\/li><\/ul><\/div><\/div><script data-cfasync=\"false\" src=\"\/cdn-cgi\/scripts\/5c5dd728\/cloudflare-static\/email-decode.min.js\"><\/script><\/body><\/html>\n\n"},{"result":{"nanos":12300,"millis":0.0123,"status":"passed"},"step":{"line":11,"prefix":"Then","index":2,"text":"status 200"}},{"result":{"nanos":960100,"millis":0.9601,"status":"passed"},"step":{"line":13,"prefix":"Then","index":3,"text":"print response"},"stepLog":"17:20:56.311 [print] <!DOCTYPE html><html><head><meta charset=\"utf-8\" \/><meta content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" name=\"viewport\" \/><link href=\"\/favicon.ico\" rel=\"icon\" type=\"image\/x-icon\" \/><title>GraphQL and REST API for Testing and Prototyping | GO REST<\/title>\n<meta name=\"description\" content=\"24\/7 online fake GraphQL and REST API service for quick testing and prototyping of web and android applications. Supports authentication, custom rate limiting, response format negotiation\">\n<meta name=\"keywords\" content=\"graphql, rest api, fake data, api testing, graphql testing, json response, xml response, oauth, rate limiting\"><meta name=\"csrf-param\" content=\"authenticity_token\" \/>\n<meta name=\"csrf-token\" content=\"qOhCUajMkzzyPNJfX10Yc8ttdGjzgGB4lfTBr-b0u8fffP6sLQKHvKW5BTpDJxr4nwk8Ng76kOIF0mxNEIIFaQ\" \/><link rel=\"stylesheet\" href=\"\/assets\/application-2715366c2372d5dfabfa9c9d05a0e84b9c0de17fe12c2d96e07d2db0e218fed2.css\" media=\"all\" data-turbolinks-track=\"reload\" \/><script src=\"\/packs\/js\/application-84cecc93f869802defaa.js\" data-turbolinks-track=\"reload\" defer=\"defer\"><\/script><script async=\"true\" crossorigin=\"anonymous\" src=\"https:\/\/pagead2.googlesyndication.com\/pagead\/js\/adsbygoogle.js?client=ca-pub-4930099895671899\"><\/script><script async=\"true\" src=\"https:\/\/www.googletagmanager.com\/gtag\/js?id=G-7KR6VNWHWS\"><\/script><script>window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}gtag('js', new Date());gtag('config', 'G-7KR6VNWHWS');<\/script><\/head><body><nav class=\"navbar navbar-expand-lg navbar-dark bg-dark sticky-top\"><div class=\"container\"><a class=\"navbar-brand\" href=\"\/\"><i class=\"fas fa-exchange-alt\"><\/i> Go REST<\/a><button aria-controls=\"AppNavBar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" class=\"navbar-toggler\" data-bs-target=\"#AppNavBar\" data-bs-toggle=\"collapse\" type=\"button\"><span class=\"navbar-toggler-icon\"><\/span><\/button><div class=\"collapse navbar-collapse\" id=\"AppNavBar\"><ul class=\"navbar-nav ms-auto\"><li class=\"nav-item\"><a class=\"nav-link\" href=\"\/chandamama-stories\"><i class=\"fas fa-cloud-moon\"><\/i> Chandamama Stories<\/a><\/li><li class=\"nav-item\"><a class=\"nav-link\" href=\"\/qa\"><i class=\"fas fa-life-ring\"><\/i> Help<\/a><\/li><li class=\"nav-item\"><a class=\"nav-link\" href=\"\/rest-console\"><i class=\"fab fa-linux\"><\/i> Rest Console<\/a><\/li><li class=\"nav-item dropdown\"><a aria-expanded=\"false\" class=\"nav-link dropdown-toggle\" data-bs-toggle=\"dropdown\" href=\"#\" id=\"ToolsDropDown\" role=\"button\"><i class=\"fas fa-tools\"><\/i> Tools<\/a><ul aria-labelledby=\"ToolsDropDown\" class=\"dropdown-menu\"><li class=\"\"><a class=\"dropdown-item\" href=\"\/tools\/base64-encode-decode\">Base64 Encode\/Decode<\/a><\/li><li class=\"\"><a class=\"dropdown-item\" href=\"\/tools\/url-encode-decode\">Url Encode\/Decode<\/a><\/li><li class=\"\"><a class=\"dropdown-item\" href=\"\/tools\/gcode-translator\">G-Code Translator<\/a><\/li><\/ul><\/li><li class=\"nav-item\"><a class=\"nav-link\" href=\"\/consumer\/login\">Login<\/a><\/li><\/ul><\/div><\/div><\/nav><div class=\"container pt-3\"><h1 class=\"text-center\">GraphQL and REST API for Testing and Prototyping<\/h1><h4 class=\"text-center text-muted\">fake data | real responses | 24\/7 online<\/h4><div class=\"row mt-5\"><div class=\"col-md-6\"><h3>Resources<\/h3><table class=\"table table-responsive-sm table-sm\"><tr><td><samp><a target=\"_blank\" class=\"text-white\" href=\"https:\/\/gorest.co.in\/public\/v2\/users\">https:\/\/gorest.co.in\/public\/v2\/users<\/a><\/samp><\/td><td class=\"text-end\">2666<\/td><\/tr><tr><td><samp><a target=\"_blank\" class=\"text-white\" href=\"https:\/\/gorest.co.in\/public\/v2\/posts\">https:\/\/gorest.co.in\/public\/v2\/posts<\/a><\/samp><\/td><td class=\"text-end\">1300<\/td><\/tr><tr><td><samp><a target=\"_blank\" class=\"text-white\" href=\"https:\/\/gorest.co.in\/public\/v2\/comments\">https:\/\/gorest.co.in\/public\/v2\/comments<\/a><\/samp><\/td><td class=\"text-end\">1315<\/td><\/tr><tr><td><samp><a target=\"_blank\" class=\"text-white\" href=\"https:\/\/gorest.co.in\/public\/v2\/todos\">https:\/\/gorest.co.in\/public\/v2\/todos<\/a><\/samp><\/td><td class=\"text-end\">1330<\/td><\/tr><\/table><\/div><div class=\"col-md-6\"><h3>Trying it Out<\/h3><table class=\"table table-responsive-sm table-sm\"><tr><td><samp>POST \/public\/v2\/users<\/samp><\/td><td class=\"text-end\">Create a new user<\/td><\/tr><tr><td><samp>GET \/public\/v2\/users\/50<\/samp><\/td><td class=\"text-end\">Get user details<\/td><\/tr><tr><td><samp>PUT|PATCH \/public\/v2\/users\/50<\/samp><\/td><td class=\"text-end\">Update user details<\/td><\/tr><tr><td><samp>DELETE \/public\/v2\/users\/50<\/samp><\/td><td class=\"text-end\">Delete user<\/td><\/tr><\/table><\/div><\/div><h3 class=\"mt-3\">Nested Resources<\/h3><div class=\"row\"><div class=\"col-md-6\"><table class=\"table table-responsive-sm table-sm\"><tr><td><samp>GET <a target=\"_blank\" class=\"text-white\" href=\"https:\/\/gorest.co.in\/public\/v2\/users\/50\/posts\">\/public\/v2\/users\/50\/posts<\/a><\/samp><\/td><td class=\"text-end\">Retrieves user posts<\/td><\/tr><tr><td><samp>GET <a target=\"_blank\" class=\"text-white\" href=\"https:\/\/gorest.co.in\/public\/v2\/posts\/50\/comments\">\/public\/v2\/posts\/50\/comments<\/a><\/samp><\/td><td class=\"text-end\">Retrieves post comments<\/td><\/tr><tr><td><samp>GET <a target=\"_blank\" class=\"text-white\" href=\"https:\/\/gorest.co.in\/public\/v2\/users\/50\/todos\">\/public\/v2\/users\/50\/todos<\/a><\/samp><\/td><td class=\"text-end\">Retrieves user todos<\/td><\/tr><\/table><\/div><div class=\"col-md-6\"><table class=\"table table-responsive-sm table-sm\"><tr><td><samp>POST \/public\/v2\/users\/50\/posts<\/samp><\/td><td class=\"text-end\">Creates a user post<\/td><\/tr><tr><td><samp>POST \/public\/v2\/posts\/50\/comments<\/samp><\/td><td class=\"text-end\">Creates a post comment<\/td><\/tr><tr><td><samp>POST \/public\/v2\/users\/50\/todos<\/samp><\/td><td class=\"text-end\">Creates a user todo<\/td><\/tr><\/table><\/div><\/div><ul><li class=\"text-warning\">Do not post your personal data like name, email, phone, photo etc...<\/li><li class=\"text-info\">For paged results parameter \"page\" should be passed in url ex: GET <code>\/public\/v2\/users?page=1<\/code><\/li><li class=\"text-info\">Request methods PUT, POST, PATCH, DELETE needs access token, which needs to be passed with &quot;Authorization&quot; header as Bearer token.<\/li><li class=\"text-info\">API Versions <code>\/public-api\/*<\/code>, <code>\/public\/v1\/*<\/code> and <code>\/public\/v2\/*<\/code><\/li><li><a href=\"\/consumer\/login\">Get your access token<\/a><\/li><\/ul><h3 class=\"mt-5\">GraphQL Endpoint<\/h3><ul><li>GraphQL API is available at <code>https:\/\/gorest.co.in\/public\/v2\/graphql<\/code><\/li><li><a target=\"_blank\" href=\"\/graphql\/schema.json\">View GraphQL json schema<\/a><\/li><li><a target=\"_blank\" href=\"graphql\/schema.graphql\">View GrapQL schema<\/a><\/li><\/ul><h3 class=\"mt-5\">Features<\/h3><ul><li>Fully secured quick prototyping.<\/li><li>Response format negotiation. (supporting JSON and XML add &quot;.json&quot; or &quot;.xml&quot; to api end point)<\/li><li>Support for the OPTIONS and HEAD verbs.<\/li><li>Full search support on all fields. Ex: https:\/\/gorest.co.in\/public\/v2\/users?name=kumar<\/li><li>Data created\/modified by a user is only visible to that perticular user, all data will be deleted and recreated on daily basis.<\/li><li><a href=\"\/my-account\/logs\">Request and response logging.<\/a><\/li><\/ul><div class=\"row\"><div class=\"col-md-6\"><h3 class=\"mt-3\">Rate Limiting Headers<\/h3><ul><li><a href=\"\/my-account\/access-tokens\">Customize the rate limit per access token.<\/a><\/li><li><code>X-RateLimit-Limit<\/code> number of allowed requests\/minute.<\/li><li><code>X-RateLimit-Remaining<\/code> remaining requests within the current period.<\/li><li><code>X-RateLimit-Reset<\/code> seconds to wait before having maximum number of allowed requests again.<\/li><\/ul><\/div><div class=\"col-md-6\"><h3 class=\"mt-3\">Pagination Headers<\/h3><ul><li><code>X-Pagination-Total<\/code> total number of results.<\/li><li><code>X-Pagination-Pages<\/code> total number of pages.<\/li><li><code>X-Pagination-Page<\/code> current page number.<\/li><li><code>X-Pagination-Limit<\/code> results per page.<\/li><\/ul><\/div><\/div><h3 class=\"mt-3\">API Version 2<\/h3><ul><li>Path: <code>\/public\/v2\/*<\/code><\/li><li>Response format Object or Array of Objects <code>{}<\/code> or <code>[{}]<\/code><\/li><li>HTTP Status code contains the actual response code, response headers contains the pagination information, response body contains the results.<\/li><\/ul><h3 class=\"mt-3\">API Version 1<\/h3><ul><li>Path: <code>\/public\/v1\/*<\/code><\/li><li>Response format <code>{ meta:, data: }<\/code><\/li><li>HTTP status code contains the actual response code, <code>meta<\/code> contains the pagination information and <code>data<\/code> contains the actual results<\/li><\/ul><h3 class=\"mt-3\">API Version 0<\/h3><ul><li>Path: <code>\/public-api\/*<\/code><\/li><li>Response format <code>{ code :, meta:, data: }<\/code><\/li><li>HTTP status code is always 200, <code>code<\/code> contains the actual response code, <code>meta<\/code> contains the pagination information, <code>data<\/code> contains the actual results<\/li><\/ul><h3 class=\"mt-5\">Authentication<\/h3><p>Unlike Web applications, RESTful APIs are usually stateless, which means sessions or cookies should not be used. Therefore, each request should come with some sort of authentication credentials. A common practice is to send a secret access token with each request to authenticate the user. Since an access token can be used to uniquely identify and authenticate a user, API requests should always be sent via HTTPS to prevent man-in-the-middle (MitM) attacks. <\/p><p>There are different ways to send an access token:<\/p><ul><li><a href=\"https:\/\/en.wikipedia.org\/wiki\/Basic_access_authentication\" rel=\"noreferrer\" target=\"_blank\">HTTP Basic Auth<\/a>: the access token is sent as the username.<\/li><li>Query parameter: the access token is sent as a query parameter in the API URL. <br \/>e.g. <samp>https:\/\/gorest.co.in\/public\/v2\/users?access-token=xxx<\/samp><\/li><li><a href=\"https:\/\/oauth.net\/2\/\" rel=\"noreferrer\" target=\"_blank\">OAuth 2<\/a>: the access token is obtained by the consumer from an authorization server and sent to the API server via <a href=\"https:\/\/tools.ietf.org\/html\/rfc6750\" rel=\"noreferrer\" target=\"_blank\">HTTP Bearer Tokens <\/a>, according to the OAuth2 protocol.<\/li><li class=\"text-info\">This API supports only &quot;HTTP Bearer Tokens&quot; and &quot;Query parameter Auth&quot;<\/li><\/ul><h3 class=\"mt-5 mb-3\">cUrl Examples for REST API<\/h3><div class=\"mb-3\"><h6 class=\"text-info\">List users<\/h6><samp class=\"user-select-all text-break\">curl -i -H \"Accept:application\/json\" -H \"Content-Type:application\/json\" -H \"Authorization: Bearer ACCESS-TOKEN\" -XGET \"https:\/\/gorest.co.in\/public\/v2\/users\"<\/samp><\/div><div class=\"mb-3\"><h6 class=\"text-info\">Create user<\/h6><samp class=\"user-select-all text-break\">curl -i -H \"Accept:application\/json\" -H \"Content-Type:application\/json\" -H \"Authorization: Bearer ACCESS-TOKEN\" -XPOST \"https:\/\/gorest.co.in\/public\/v2\/users\" -d '{\"name\":\"Tenali Ramakrishna\", \"gender\":\"male\", \"email\":\"<a href=\"\/cdn-cgi\/l\/email-protection\" class=\"__cf_email__\" data-cfemail=\"dfabbab1beb3b6f1adbeb2beb4adb6acb7b1be9feeeabcbaf1bcb0b2\">[email&#160;protected]<\/a>\", \"status\":\"active\"}' <\/samp><\/div><div class=\"mb-3\"><h6 class=\"text-info\">Update user<\/h6><samp class=\"user-select-all text-break\">curl -i -H \"Accept:application\/json\" -H \"Content-Type:application\/json\" -H \"Authorization: Bearer ACCESS-TOKEN\" -XPATCH \"https:\/\/gorest.co.in\/public\/v2\/users\/50\" -d '{\"name\":\"Allasani Peddana\", \"email\":\"<a href=\"\/cdn-cgi\/l\/email-protection\" class=\"__cf_email__\" data-cfemail=\"5c3d30303d2f3d3235722c3938383d323d1c6d693f39723f3331\">[email&#160;protected]<\/a>\", \"status\":\"active\"}' <\/samp><\/div><div class=\"mb-3\"><h6 class=\"text-info\">Delete user<\/h6><samp class=\"user-select-all text-break\">curl -i -H \"Accept:application\/json\" -H \"Content-Type:application\/json\" -H \"Authorization: Bearer ACCESS-TOKEN\" -XDELETE \"https:\/\/gorest.co.in\/public\/v2\/users\/50\"<\/samp><\/div><h3 class=\"mt-5 mb-3\">cUrl Examples for GraphQL<\/h3><div class=\"mb-3\"><h6 class=\"text-info\">List users<\/h6><samp class=\"user-select-all text-break\">curl -i -H \"Accept:application\/json\" -H \"Content-Type:application\/json\" -H \"Authorization: Bearer ACCESS-TOKEN\" -XPOST \"https:\/\/gorest.co.in\/public\/v2\/graphql\" -d '{\"query\":\"query{users {pageInfo {endCursor startCursor hasNextPage hasPreviousPage} totalCount nodes {id name email gender status}}}\"}'<\/samp><\/div><div class=\"mb-3\"><h6 class=\"text-info\">Get User<\/h6><samp class=\"user-select-all text-break\">curl -i -H \"Accept:application\/json\" -H \"Content-Type:application\/json\" -H \"Authorization: Bearer ACCESS-TOKEN\" -XPOST \"https:\/\/gorest.co.in\/public\/v2\/graphql\" -d '{\"query\":\"query{user(id: 50) { id name email gender status }}\"}'<\/samp><\/div><div class=\"mb-3\"><h6 class=\"text-info\">Create User<\/h6><samp class=\"user-select-all text-break\">curl -i -H \"Accept:application\/json\" -H \"Content-Type:application\/json\" -H \"Authorization: Bearer ACCESS-TOKEN\" -XPOST \"https:\/\/gorest.co.in\/public\/v2\/graphql\" -d '{\"query\":\"mutation{createUser(input: {name: \\\"Tenali Ramakrishna\\\" gender: \\\"male\\\" email: \\\"<a href=\"\/cdn-cgi\/l\/email-protection\" class=\"__cf_email__\" data-cfemail=\"2e5a4b404f4247005c4f434f455c475d46404f6e1f1b4d4b004d4143\">[email&#160;protected]<\/a>\\\" status: \\\"active\\\"}) {user{id name gender email status}}}\"}'<\/samp><\/div><div class=\"mb-3\"><h6 class=\"text-info\">Update User<\/h6><samp class=\"user-select-all text-break\">curl -i -H \"Accept:application\/json\" -H \"Content-Type:application\/json\" -H \"Authorization: Bearer ACCESS-TOKEN\" -XPOST \"https:\/\/gorest.co.in\/public\/v2\/graphql\" -d '{\"query\":\"mutation{updateUser(input: {id: 50 name: \\\"Allasani Peddana\\\" email: \\\"<a href=\"\/cdn-cgi\/l\/email-protection\" class=\"__cf_email__\" data-cfemail=\"03626f6f6270626d6a2d73666767626d6243323660662d606c6e\">[email&#160;protected]<\/a>\\\" status: \\\"active\\\"}) {user{id name gender email status}}}\"}'<\/samp><\/div><div class=\"mb-3\"><h6 class=\"text-info\">Delete User<\/h6><samp class=\"user-select-all text-break\">curl -i -H \"Accept:application\/json\" -H \"Content-Type:application\/json\" -H \"Authorization: Bearer ACCESS-TOKEN\" -XPOST \"https:\/\/gorest.co.in\/public\/v2\/graphql\" -d '{\"query\":\"mutation{deleteUser(input: {id: 50}){user {id name email gender status}}}\"}'<\/samp><\/div><h3 class=\"mt-5\">REST API Http Response Codes<\/h3><ul><li>200: OK. Everything worked as expected.<\/li><li>201: A resource was successfully created in response to a POST request. The Location header contains the URL pointing to the newly created resource.<\/li><li>204: The request was handled successfully and the response contains no body content (like a DELETE request).<\/li><li>304: The resource was not modified. You can use the cached version.<\/li><li>400: Bad request. This could be caused by various actions by the user, such as providing invalid JSON data in the request body etc.<\/li><li>401: Authentication failed.<\/li><li>403: The authenticated user is not allowed to access the specified API endpoint.<\/li><li>404: The requested resource does not exist.<\/li><li>405: Method not allowed. Please check the Allow header for the allowed HTTP methods.<\/li><li>415: Unsupported media type. The requested content type or version number is invalid.<\/li><li>422: Data validation failed (in response to a POST request, for example). Please check the response body for detailed error messages.<\/li><li>429: Too many requests. The request was rejected due to rate limiting.<\/li><li>500: Internal server error. This could be caused by internal program errors.<\/li><\/ul><\/div><hr class=\"mt-5\" \/><div class=\"container\"><div class=\"footer\"><ul class=\"list-inline\"><li class=\"list-inline-item\">&copy; Go Rest 2022<\/li><li class=\"list-inline-item float-lg-end\"><a href=\"\/privacy-policy\">Privacy Policy<\/a><\/li><li class=\"list-inline-item float-lg-end me-3\"><a href=\"\/contact-us\">Contact Us<\/a><\/li><\/ul><\/div><\/div><script data-cfasync=\"false\" src=\"\/cdn-cgi\/scripts\/5c5dd728\/cloudflare-static\/email-decode.min.js\"><\/script><\/body><\/html> \n"}],"executorName":"main","line":7,"name":"Get details Of All Users","description":"","durationMillis":1373.0903,"startTime":1659700254937,"failed":false,"refId":"[1:7]","endTime":1659700256311,"exampleIndex":-1}],"callDepth":0,"name":"To Get the details Of User from GoRest","description":"","resultDate":"2022-08-05 05:20:56 pm","durationMillis":1373.0903,"passedCount":1}